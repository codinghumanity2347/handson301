
node {



notify('Started')



try {



// Get Artifactory server instance, defined in the Artifactory Plugin administration page.

    def server = Artifactory.server "01"

    def buildInfo = Artifactory.newBuildInfo() 



// Project Dir

    def project_path = "petclinic-ziddi"





stage('GitCheckOut') {

git branch: 'preprod', credentialsId: '01', url: 'https://github.com/codinghumanity2347/handson301.git'

}







dir(project_path){



stage('Maven Clean') {

sh 'mvn clean'

}



stage('Maven Compile') {

sh 'mvn compile'

}



stage('Maven test') {

sh 'mvn test'

}



stage('Maven pkg') {

sh 'mvn package'

}



stage('Build Managment') {

      def uploadSpec = """{

	 "files": [

	{

	"pattern": "*.war",

	"target": "target/"

        }

	]

	}"""

	server.upload spec: uploadSpec

 }





stage('Publish build info') {

  server.publishBuildInfo buildInfo

}



stage('Deployment - PreProd') {

sh 'docker-compose up -d --build'

}

}



  notify('Completed')

} catch(err){

  notify("Error ${err}")

  currentBuild.result = 'FAILURE'

 }

}



def notify(status){

    emailext(

    to: "kriti1996@gmail.com",

    subject: "${status} :JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",

    body:"""<p>${status}: :JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>

            <p>Check Console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",

    )

}
